//
// File generated by rootcint at Thu Dec  2 01:18:58 2004.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

#include "RootCint.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "RtypesImp.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void st_graphcLcLRootFrame_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   TClass *st_graphcLcLRootFrame_IsA(const void*);
   void delete_st_graphcLcLRootFrame(void *p);
   void deleteArray_st_graphcLcLRootFrame(void *p);
   void destruct_st_graphcLcLRootFrame(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const st_graph::RootFrame*)
   {
      st_graph::RootFrame *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("st_graph::RootFrame", st_graph::RootFrame::Class_Version(), "RootFrame.h", 25,
                  typeid(st_graph::RootFrame), DefineBehavior(ptr, ptr),
                  &::st_graph::RootFrame::Dictionary, &st_graphcLcLRootFrame_IsA, 0);
      instance.SetDelete(&delete_st_graphcLcLRootFrame);
      instance.SetDeleteArray(&deleteArray_st_graphcLcLRootFrame);
      instance.SetDestructor(&destruct_st_graphcLcLRootFrame);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const st_graph::RootFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *st_graph::RootFrame::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *st_graph::RootFrame::Class_Name()
{
   return "st_graph::RootFrame";
}

//______________________________________________________________________________
const char *st_graph::RootFrame::ImplFileName()
{
   return ROOT::GenerateInitInstance((const st_graph::RootFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int st_graph::RootFrame::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const st_graph::RootFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void st_graph::RootFrame::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const st_graph::RootFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *st_graph::RootFrame::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const st_graph::RootFrame*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void st_graph::RootFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class st_graph::RootFrame.

   ::Error("st_graph::RootFrame::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void st_graph::RootFrame::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class st_graph::RootFrame.

      TClass *R__cl = st_graph::RootFrame::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fQObject", &fQObject);
      fQObject.ShowMembers(R__insp, strcat(R__parent,"fQObject.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_subframes", (void*)&m_subframes);
      ROOT::GenericShowMembers("list<IFrame*>", (void*)&m_subframes, R__insp, strcat(R__parent,"m_subframes."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*m_parent", &m_parent);
      R__insp.Inspect(R__cl, R__parent, "*m_frame", &m_frame);
      R__insp.Inspect(R__cl, R__parent, "*m_receiver", &m_receiver);
      R__insp.Inspect(R__cl, R__parent, "m_delete_parent", &m_delete_parent);
      ROOT::GenericShowMembers("st_graph::IFrame", ( ::st_graph::IFrame *) (this ), R__insp, R__parent, false);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   TClass *st_graphcLcLRootFrame_IsA(const void *obj) {
      return ((::st_graph::RootFrame*)obj)->IsA();
   }
   // Wrapper around operator delete
   void delete_st_graphcLcLRootFrame(void *p) {
      delete ((::st_graph::RootFrame*)p);
   }
   void deleteArray_st_graphcLcLRootFrame(void *p) {
      delete [] ((::st_graph::RootFrame*)p);
   }
   void destruct_st_graphcLcLRootFrame(void *p) {
      typedef ::st_graph::RootFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class st_graph::RootFrame

/********************************************************
* RootCint.cxx
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableRootCint();

extern "C" void G__set_cpp_environmentRootCint() {
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("RootFrame.h");
  G__cpp_reset_tagtableRootCint();
}
class G__RootCintdOcxx_tag {};

void* operator new(size_t size,G__RootCintdOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__RootCintdOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_RootCintdOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevRootCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* st_graph */

/* st_graph::RootFrame */
static int G__RootCint_141_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((st_graph::RootFrame*)(G__getstructoffset()))->Connect((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2]),(const char*)G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,103,(long)((st_graph::RootFrame*)(G__getstructoffset()))->Disconnect((const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)((st_graph::RootFrame*)(G__getstructoffset()))->Disconnect((const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,103,(long)((st_graph::RootFrame*)(G__getstructoffset()))->Disconnect((const char*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,103,(long)((st_graph::RootFrame*)(G__getstructoffset()))->Disconnect());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->HighPriority((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->HighPriority((const char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->LowPriority((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->LowPriority((const char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),(Long_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),(Long_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),*((Long64_t*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),*((ULong64_t*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),(Char_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),(UChar_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),(Short_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),(UShort_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),(ULong_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),(Float_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Destroyed();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->ChangedBy((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Message((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)st_graph::RootFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)st_graph::RootFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)st_graph::RootFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      st_graph::RootFrame::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const st_graph::RootFrame*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)st_graph::RootFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)st_graph::RootFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)st_graph::RootFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)st_graph::RootFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)st_graph::RootFrame::ancestor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   st_graph::RootFrame *p=NULL;
   switch(libp->paran) {
   case 4:
      p = ::new((G__RootCintdOcxx_tag*)G__getgvp()) st_graph::RootFrame(
(st_graph::IFrame*)G__int(libp->para[0]),(st_graph::IEventReceiver*)G__int(libp->para[1])
,(TGFrame*)G__int(libp->para[2]),(bool)G__int(libp->para[3]));
      break;
   case 3:
      p = ::new((G__RootCintdOcxx_tag*)G__getgvp()) st_graph::RootFrame(
(st_graph::IFrame*)G__int(libp->para[0]),(st_graph::IEventReceiver*)G__int(libp->para[1])
,(TGFrame*)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__RootCintLN_st_graphcLcLRootFrame);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   st_graph::RootFrame *p=NULL;
   switch(libp->paran) {
   case 3:
      p = ::new((G__RootCintdOcxx_tag*)G__getgvp()) st_graph::RootFrame(
(st_graph::IEventReceiver*)G__int(libp->para[0]),(TGFrame*)G__int(libp->para[1])
,(bool)G__int(libp->para[2]));
      break;
   case 2:
      p = ::new((G__RootCintdOcxx_tag*)G__getgvp()) st_graph::RootFrame((st_graph::IEventReceiver*)G__int(libp->para[0]),(TGFrame*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__RootCintLN_st_graphcLcLRootFrame);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->display();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->unDisplay();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->addFrame((st_graph::IFrame*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->removeFrame((st_graph::IFrame*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,108,(long)((const st_graph::RootFrame*)(G__getstructoffset()))->getL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->setL((long)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,108,(long)((const st_graph::RootFrame*)(G__getstructoffset()))->getR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->setR((long)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,108,(long)((const st_graph::RootFrame*)(G__getstructoffset()))->getWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,108,(long)((const st_graph::RootFrame*)(G__getstructoffset()))->getHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->clicked();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((st_graph::RootFrame*)(G__getstructoffset()))->closeWindow();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCint_141_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((st_graph::RootFrame*)(G__getstructoffset()))->getTGFrame());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RootCint_141_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   st_graph::RootFrame *p;
   p=new st_graph::RootFrame(*(st_graph::RootFrame*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__RootCintLN_st_graphcLcLRootFrame);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef st_graph::RootFrame G__Tst_graphcLcLRootFrame;
static int G__RootCint_141_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (st_graph::RootFrame *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((st_graph::RootFrame *)((G__getstructoffset())+sizeof(st_graph::RootFrame)*i))->~G__Tst_graphcLcLRootFrame();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((st_graph::RootFrame *)(G__getstructoffset()))->~G__Tst_graphcLcLRootFrame();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* st_graph */

/* st_graph::RootFrame */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncRootCint {
 public:
  G__Sizep2memfuncRootCint() {p=&G__Sizep2memfuncRootCint::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncRootCint::*p)();
};

size_t G__get_sizep2memfuncRootCint()
{
  G__Sizep2memfuncRootCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceRootCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RootCintLN_st_graphcLcLRootFrame))) {
     st_graph::RootFrame *G__Lderived;
     G__Lderived=(st_graph::RootFrame*)0x1000;
     {
       st_graph::IFrame *G__Lpbase=(st_graph::IFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RootCintLN_st_graphcLcLRootFrame),G__get_linked_tagnum(&G__RootCintLN_st_graphcLcLIFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableRootCint() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,
-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,
-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Short_t",115,-1,0,
-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,
-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,
-1);
   G__setnewtype(-1,"Signed long integer 4 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,
-1);
   G__setnewtype(-1,"Unsigned long integer 4 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,
-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Float 8 bytes (double)",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",117,G__get_linked_tagnum(&G__RootCintLN_G__longlong),0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("ULong64_t",117,G__get_linked_tagnum(&G__RootCintLN_G__ulonglong),0,-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* st_graph */
static void G__setup_memvarst_graph(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootCintLN_st_graph));
   {
   }
   G__tag_memvar_reset();
}


   /* st_graph::RootFrame */
static void G__setup_memvarst_graphcLcLRootFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootCintLN_st_graphcLcLRootFrame));
   { st_graph::RootFrame *p; p=(st_graph::RootFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__RootCintLN_TQObjSender),-1,-1,4,"fQObject=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__RootCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__RootCintLN_listlEst_graphcLcLIFramemUcOallocatorlEst_graphcLcLIFramemUgRsPgR),G__defined_typename("list<IFrame*>"),-1,2,"m_subframes=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__RootCintLN_st_graphcLcLRootFrame),-1,-1,2,"m_parent=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__RootCintLN_TGFrame),-1,-1,2,"m_frame=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__RootCintLN_st_graphcLcLIEventReceiver),-1,-1,2,"m_receiver=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,-1,-1,2,"m_delete_parent=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarRootCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncst_graph(void) {
   /* st_graph */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootCintLN_st_graph));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncst_graphcLcLRootFrame(void) {
   /* st_graph::RootFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootCintLN_st_graphcLcLRootFrame));
   G__memfunc_setup("Connect",714,G__RootCint_141_0_0,103,-1,G__defined_typename("Bool_t"),0,4,1,1,0,
"C - - 10 - sig C - - 10 - cl "
"Y - - 0 - rcvr C - - 10 - slt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Disconnect",1034,G__RootCint_141_1_0,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"C - - 10 0 sig Y - - 0 0 rcvr "
"C - - 10 0 slt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HighPriority",1250,G__RootCint_141_2_0,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal_name C - - 10 0 slot_name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("LowPriority",1172,G__RootCint_141_3_0,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal_name C - - 10 0 slot_name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Emit",399,G__RootCint_141_4_0,121,-1,-1,0,1,1,1,0,"C - - 10 - signal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Emit",399,G__RootCint_141_5_0,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal C - - 10 - params",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Emit",399,G__RootCint_141_6_0,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal L - 'Long_t' 0 - paramArr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Emit",399,G__RootCint_141_7_0,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal d - 'Double_t' 0 - param",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Emit",399,G__RootCint_141_8_0,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal l - 'Long_t' 0 - param",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Emit",399,G__RootCint_141_9_0,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal u 'G__longlong' 'Long64_t' 0 - param",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Emit",399,G__RootCint_141_0_1,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal u 'G__ulonglong' 'ULong64_t' 0 - param",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Emit",399,G__RootCint_141_1_1,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal g - 'Bool_t' 0 - param",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Emit",399,G__RootCint_141_2_1,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal c - 'Char_t' 0 - param",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Emit",399,G__RootCint_141_3_1,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal b - 'UChar_t' 0 - param",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Emit",399,G__RootCint_141_4_1,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal s - 'Short_t' 0 - param",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Emit",399,G__RootCint_141_5_1,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal r - 'UShort_t' 0 - param",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Emit",399,G__RootCint_141_6_1,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal i - 'Int_t' 0 - param",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Emit",399,G__RootCint_141_7_1,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal h - 'UInt_t' 0 - param",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Emit",399,G__RootCint_141_8_1,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal k - 'ULong_t' 0 - param",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Emit",399,G__RootCint_141_9_1,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal f - 'Float_t' 0 - param",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Destroyed",947,G__RootCint_141_0_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ChangedBy",869,G__RootCint_141_1_2,121,-1,-1,0,1,1,1,0,"C - - 10 - method",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Message",709,G__RootCint_141_2_2,121,-1,-1,0,1,1,1,0,"C - - 10 - msg",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__RootCint_141_3_2,85,G__get_linked_tagnum(&G__RootCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__RootCint_141_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__RootCint_141_5_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__RootCint_141_6_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__RootCint_141_7_2,85,G__get_linked_tagnum(&G__RootCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__RootCint_141_8_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__RootCint_141_9_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RootCint_141_0_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__RootCint_141_1_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__RootCint_141_2_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__RootCint_141_3_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__RootCint_141_4_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ancestor",863,G__RootCint_141_5_3,85,G__get_linked_tagnum(&G__RootCintLN_st_graphcLcLRootFrame),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RootFrame",911,G__RootCint_141_6_3,105,G__get_linked_tagnum(&G__RootCintLN_st_graphcLcLRootFrame),-1,0,4,1,1,0,
"U 'st_graph::IFrame' - 0 - parent U 'st_graph::IEventReceiver' - 0 - receiver "
"U 'TGFrame' - 0 - frame g - - 0 false delete_parent",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RootFrame",911,G__RootCint_141_7_3,105,G__get_linked_tagnum(&G__RootCintLN_st_graphcLcLRootFrame),-1,0,3,1,1,0,
"U 'st_graph::IEventReceiver' - 0 - receiver U 'TGFrame' - 0 - frame "
"g - - 0 false delete_parent",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("display",758,G__RootCint_141_9_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("unDisplay",953,G__RootCint_141_0_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("addFrame",788,G__RootCint_141_1_4,121,-1,-1,0,1,1,1,0,"U 'st_graph::IFrame' - 0 - frame",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("removeFrame",1145,G__RootCint_141_2_4,121,-1,-1,0,1,1,1,0,"U 'st_graph::IFrame' - 0 - frame",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("getL",396,G__RootCint_141_3_4,108,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("setL",408,G__RootCint_141_4_4,121,-1,-1,0,1,1,1,0,"l - - 0 - l",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("getR",402,G__RootCint_141_5_4,108,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("setR",414,G__RootCint_141_6_4,121,-1,-1,0,1,1,1,0,"l - - 0 - r",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("getWidth",832,G__RootCint_141_7_4,108,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("getHeight",921,G__RootCint_141_8_4,108,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("clicked",719,G__RootCint_141_9_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("closeWindow",1166,G__RootCint_141_0_5,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("getTGFrame",966,G__RootCint_141_1_5,85,G__get_linked_tagnum(&G__RootCintLN_TGFrame),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RootFrame",911,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__RootCintLN_st_graphcLcLRootFrame),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("RootFrame",911,G__RootCint_141_3_5,(int)('i'),G__get_linked_tagnum(&G__RootCintLN_st_graphcLcLRootFrame),-1,0,1,1,1,0,"u 'st_graph::RootFrame' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~RootFrame",1037,G__RootCint_141_4_5,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncRootCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalRootCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcRootCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__RootCintLN_G__longlong = { "G__longlong" , 99 , -1 };
G__linked_taginfo G__RootCintLN_G__ulonglong = { "G__ulonglong" , 99 , -1 };
G__linked_taginfo G__RootCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__RootCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__RootCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__RootCintLN_TQObjSender = { "TQObjSender" , 99 , -1 };
G__linked_taginfo G__RootCintLN_st_graph = { "st_graph" , 110 , -1 };
G__linked_taginfo G__RootCintLN_st_graphcLcLIFrame = { "st_graph::IFrame" , 99 , -1 };
G__linked_taginfo G__RootCintLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__RootCintLN_st_graphcLcLIEventReceiver = { "st_graph::IEventReceiver" , 99 , -1 };
G__linked_taginfo G__RootCintLN_st_graphcLcLRootFrame = { "st_graph::RootFrame" , 99 , -1 };
G__linked_taginfo G__RootCintLN_listlEst_graphcLcLIFramemUcOallocatorlEst_graphcLcLIFramemUgRsPgR = { "list<st_graph::IFrame*,allocator<st_graph::IFrame*> >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableRootCint() {
  G__RootCintLN_G__longlong.tagnum = -1 ;
  G__RootCintLN_G__ulonglong.tagnum = -1 ;
  G__RootCintLN_TClass.tagnum = -1 ;
  G__RootCintLN_TBuffer.tagnum = -1 ;
  G__RootCintLN_TMemberInspector.tagnum = -1 ;
  G__RootCintLN_TQObjSender.tagnum = -1 ;
  G__RootCintLN_st_graph.tagnum = -1 ;
  G__RootCintLN_st_graphcLcLIFrame.tagnum = -1 ;
  G__RootCintLN_TGFrame.tagnum = -1 ;
  G__RootCintLN_st_graphcLcLIEventReceiver.tagnum = -1 ;
  G__RootCintLN_st_graphcLcLRootFrame.tagnum = -1 ;
  G__RootCintLN_listlEst_graphcLcLIFramemUcOallocatorlEst_graphcLcLIFramemUgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableRootCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__RootCintLN_G__longlong);
   G__get_linked_tagnum(&G__RootCintLN_G__ulonglong);
   G__get_linked_tagnum(&G__RootCintLN_TClass);
   G__get_linked_tagnum(&G__RootCintLN_TBuffer);
   G__get_linked_tagnum(&G__RootCintLN_TMemberInspector);
   G__get_linked_tagnum(&G__RootCintLN_TQObjSender);
   G__tagtable_setup(G__get_linked_tagnum(&G__RootCintLN_st_graph),0,-1,0,(char*)NULL,G__setup_memvarst_graph,G__setup_memfuncst_graph);
   G__get_linked_tagnum(&G__RootCintLN_st_graphcLcLIFrame);
   G__get_linked_tagnum(&G__RootCintLN_TGFrame);
   G__get_linked_tagnum(&G__RootCintLN_st_graphcLcLIEventReceiver);
   G__tagtable_setup(G__get_linked_tagnum(&G__RootCintLN_st_graphcLcLRootFrame),sizeof(st_graph::RootFrame),-1,34048,(char*)NULL,G__setup_memvarst_graphcLcLRootFrame,G__setup_memfuncst_graphcLcLRootFrame);
   G__get_linked_tagnum(&G__RootCintLN_listlEst_graphcLcLIFramemUcOallocatorlEst_graphcLcLIFramemUgRsPgR);
}
extern "C" void G__cpp_setupRootCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupRootCint()");
  G__set_cpp_environmentRootCint();
  G__cpp_setup_tagtableRootCint();

  G__cpp_setup_inheritanceRootCint();

  G__cpp_setup_typetableRootCint();

  G__cpp_setup_memvarRootCint();

  G__cpp_setup_memfuncRootCint();
  G__cpp_setup_globalRootCint();
  G__cpp_setup_funcRootCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncRootCint();
  return;
}
class G__cpp_setup_initRootCint {
  public:
    G__cpp_setup_initRootCint() { G__add_setup_func("RootCint",(G__incsetup)(&G__cpp_setupRootCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initRootCint() { G__remove_setup_func("RootCint"); }
};
G__cpp_setup_initRootCint G__cpp_setup_initializerRootCint;

